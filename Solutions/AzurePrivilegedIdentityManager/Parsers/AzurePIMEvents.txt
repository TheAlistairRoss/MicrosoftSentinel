AuditLogs
| where Category in ("RoleManagement", "ResourceManagement")
| join kind = leftouter AzurePIMOperationsMappings() on OperationName
| extend ObjectId = tostring(TargetResources[toint(ObjectMapping[0])].id)
| extend Object = case(
    (array_length(ObjectMapping) <= 0), "", 
    array_length(ObjectMapping) == 1, case(
        isnotempty(tostring(TargetResources[toint(ObjectMapping[0])].userPrincipalName)), tostring(TargetResources[toint(ObjectMapping[0])].userPrincipalName),
        tostring(TargetResources[toint(ObjectMapping[0])].displayName)
    ),
    "Unknown Mapping"
)
| extend Object = case((Object startswith replace_string(ObjectId,"-","")), substring(Object, strlen(replace_string(ObjectId,"-",""))), Object)
| extend ObjectType = tostring(TargetResources[toint(ObjectMapping[0])].type)
| extend Role = case(
    array_length(RoleNameMapping) == 1, trim(@'^\"|\"$', tostring(TargetResources[toint(RoleNameMapping[0])].displayName)),
    array_length(RoleNameMapping) == 3, trim(@'^\"|\"$', tostring(TargetResources[toint(RoleNameMapping[0])].modifiedProperties.[toint(RoleNameMapping[1])].[tostring(RoleNameMapping[2])])),
    "Unknown Mapping"
    )
| extend RoleId = case(
    array_length(RoleIdMapping) == 1, trim(@'^\"|\"$', tostring(TargetResources[toint(RoleIdMapping[0])].id)),
    array_length(RoleIdMapping) == 3, trim(@'^\"|\"$', tostring(TargetResources[toint(RoleIdMapping[0])].modifiedProperties.[toint(RoleIdMapping[1])].[tostring(RoleIdMapping[2])])),
    "Unknown Mapping"
)
| extend RoleType = case(
    Category == "RoleManagement", "Azure AD Role",
    Category == "Resourcemanagement", "Azure RBAC Role",
    "Unknown Mapping"
)
| extend InitiatedByType = tostring(bag_keys(parse_json(InitiatedBy))[0])
| extend InitiatedByObject = case(
    (InitiatedByType == "user"), case(
        isnotempty(tostring(parse_json(InitiatedBy.user.userPrincipalName))), tostring(parse_json(InitiatedBy.user.userPrincipalName)), 
        tostring(parse_json(InitiatedBy.user.displayName))
    ),
    (InitiatedByType == "app"), tostring(parse_json(InitiatedBy.app.displayName)),
    "Unknown Mapping"
)
| extend InitiatedByObjectId = case(
    (InitiatedByType == "user"), tostring(parse_json(InitiatedBy.user.id)),
    (InitiatedByType == "app"), tostring(parse_json(InitiatedBy.app.servicePrincipalId)),
    "Unknown Mapping"
)
| project-away OperationName1, ObjectMapping, RoleIdMapping, RoleNameMapping
