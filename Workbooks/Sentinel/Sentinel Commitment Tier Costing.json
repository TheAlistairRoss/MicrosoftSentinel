{
    "version": "Notebook/1.0",
    "items": [
      {
        "type": 9,
        "content": {
          "version": "KqlParameterItem/1.0",
          "parameters": [
            {
              "id": "3b23bed9-9564-467c-aea0-4d2ee76f7e77",
              "version": "KqlParameterItem/1.0",
              "name": "Subscriptions",
              "type": 6,
              "isRequired": true,
              "multiSelect": true,
              "quote": "'",
              "delimiter": ",",
              "query": "resources\r\n| where type =~ \"microsoft.operationalinsights/workspaces\"\r\n| distinct subscriptionId",
              "crossComponentResources": [
                "value::all"
              ],
              "typeSettings": {
                "additionalResourceOptions": [
                  "value::all"
                ]
              },
              "defaultValue": "value::all",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources"
            },
            {
              "id": "d766ea1e-e7cb-4c21-9544-ced5c7aeef8d",
              "version": "KqlParameterItem/1.0",
              "name": "Workspace",
              "type": 5,
              "isRequired": true,
              "query": "resources\r\n| where type =~ \"microsoft.operationalinsights/workspaces\"\r\n| project id, name, subscriptionId\r\n| join kind = inner (\r\n    resourcecontainers\r\n    | where type == \"microsoft.resources/subscriptions\"\r\n    | project subscriptionId, subscription = strcat(name,\" (\",subscriptionId,\")\")\r\n)\r\non subscriptionId\r\n|project value = id, label = name, group = subscription",
              "crossComponentResources": [
                "{Subscriptions}"
              ],
              "typeSettings": {
                "additionalResourceOptions": [],
                "showDefault": false
              },
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "value": "/subscriptions/d1d8779d-38d7-4f06-91db-9cbc8de0176f/resourceGroups/SOC/providers/Microsoft.OperationalInsights/workspaces/CyberSecuritySOC"
            },
            {
              "id": "e7fe4e9e-f94c-49ef-aae3-f93bc7cb6cf5",
              "version": "KqlParameterItem/1.0",
              "name": "ShowHelp",
              "label": "Show Help",
              "type": 10,
              "isRequired": true,
              "typeSettings": {
                "additionalResourceOptions": [],
                "showDefault": false
              },
              "jsonData": "[\r\n    {\"value\":\"true\", \"label\": \"Yes\", \"selected\": true},\r\n    {\"value\":\"false\", \"label\": \"No\", \"selected\": false}\r\n]",
              "timeContext": {
                "durationMs": 86400000
              },
              "value": "false"
            },
            {
              "id": "a27fb8f0-d361-4039-9d5a-71c86f5a1f79",
              "version": "KqlParameterItem/1.0",
              "name": "WorkspaceLocation",
              "type": 8,
              "isRequired": true,
              "query": "resources\r\n| where id == \"{Workspace:id}\"\r\n| project location\r\n| extend selected = true",
              "crossComponentResources": [
                "{Subscriptions}"
              ],
              "isHiddenWhenLocked": true,
              "typeSettings": {
                "additionalResourceOptions": [
                  "value::1"
                ],
                "showDefault": false
              },
              "queryType": 1,
              "value": null
            }
          ],
          "style": "pills",
          "queryType": 0,
          "resourceType": "microsoft.operationalinsights/workspaces"
        },
        "name": "parameters - 0"
      },
      {
        "type": 11,
        "content": {
          "version": "LinkItem/1.0",
          "style": "tabs",
          "links": [
            {
              "id": "d5adeafc-4b94-447b-917e-02141ac66c9b",
              "cellValue": "TabSelection",
              "linkTarget": "parameter",
              "linkLabel": "Setup",
              "subTarget": "Setup",
              "style": "link"
            },
            {
              "id": "fb7a3cf7-c9be-418b-9bde-149a1b770abf",
              "cellValue": "TabSelection",
              "linkTarget": "parameter",
              "linkLabel": "Charts",
              "subTarget": "Charts",
              "style": "link"
            },
            {
              "id": "cf8eb75a-f396-4b76-a024-8de0c737231c",
              "cellValue": "TabSelection",
              "linkTarget": "parameter",
              "linkLabel": "Forecasting",
              "subTarget": "Forecasting",
              "style": "link"
            }
          ]
        },
        "name": "links - 6"
      },
      {
        "type": 12,
        "content": {
          "version": "NotebookGroup/1.0",
          "groupType": "editable",
          "items": [
            {
              "type": 1,
              "content": {
                "json": "# Setup\r\n\r\nThe following **Currency Code** parameter needs to be selected, then the below PowerShell code requires executing and the output pasted into the **Prices Input** parameter. This is required because Azure Workbooks do not support Rest API's as a data source that do not support cross origin resource sharing. Running this script before viewing the charts will ensure you have the most accurate retail price to date.",
                "style": "info"
              },
              "name": "text - 3"
            },
            {
              "type": 9,
              "content": {
                "version": "KqlParameterItem/1.0",
                "parameters": [
                  {
                    "id": "4e04e9a7-1da3-4cfe-aa8a-35ad6229606b",
                    "version": "KqlParameterItem/1.0",
                    "name": "CurrencyCode",
                    "type": 2,
                    "description": "This is the currency code which your billing account should be billed / charged in",
                    "typeSettings": {
                      "additionalResourceOptions": [],
                      "showDefault": false
                    },
                    "jsonData": "[\r\n  {\r\n    \"label\": \"USD US dollar\",\r\n    \"value\": \"USD\",\r\n    \"selected\": true\r\n  },\r\n  {\r\n    \"label\": \"AUD Australian dollar\",\r\n    \"value\": \"AUD\"\r\n  },\r\n  {\r\n    \"label\": \"BRL Brazilian real\",\r\n    \"value\": \"BRL\"\r\n  },\r\n  {\r\n    \"label\": \"CAD Canadian dollar\",\r\n    \"value\": \"CAD\"\r\n  },\r\n  {\r\n    \"label\": \"CHF Swiss franc\",\r\n    \"value\": \"CHF\"\r\n  },\r\n  {\r\n    \"label\": \"CNY Chinese yuan\",\r\n    \"value\": \"CNY\"\r\n  },\r\n  {\r\n    \"label\": \"DKK Danish krone\",\r\n    \"value\": \"DKK\"\r\n  },\r\n  {\r\n    \"label\": \"EUR Euro\",\r\n    \"value\": \"EUR\"\r\n  },\r\n  {\r\n    \"label\": \"GBP British pound\",\r\n    \"value\": \"GBP\"\r\n  },\r\n  {\r\n    \"label\": \"INR Indian rupee\",\r\n    \"value\": \"INR\"\r\n  },\r\n  {\r\n    \"label\": \"JPY Japanese yen\",\r\n    \"value\": \"JPY\"\r\n  },\r\n  {\r\n    \"label\": \"KRW Korean won\",\r\n    \"value\": \"KRW\"\r\n  },\r\n  {\r\n    \"label\": \"NOK Norwegian krone\",\r\n    \"value\": \"NOK\"\r\n  },\r\n  {\r\n    \"label\": \"NZD New Zealand dollar\",\r\n    \"value\": \"NZD\"\r\n  },\r\n  {\r\n    \"label\": \"RUB Russian ruble\",\r\n    \"value\": \"RUB\"\r\n  },\r\n  {\r\n    \"label\": \"SEK Swedish krona\",\r\n    \"value\": \"SEK\"\r\n  },\r\n  {\r\n    \"label\": \"TWD Taiwan dollar\",\r\n    \"value\": \"TWD\"\r\n  }\r\n]\r\n",
                    "timeContext": {
                      "durationMs": 86400000
                    },
                    "value": "GBP"
                  }
                ],
                "style": "pills",
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces"
              },
              "name": "parameters - 0"
            },
            {
              "type": 1,
              "content": {
                "json": "# Run the following code in PowerShell\r\n\r\nRun the following code in a PowerShell terminal (with internet connectivity) and copy the json output to the **Price Inputs** parameter below.\r\n\r\n> TIP!: If you cannot run PowerShell locally, consider using the Azure Cloud shell. Quickstarts can be found here https://learn.microsoft.com/en-us/azure/cloud-shell/quickstart-powershell\r\n\r\n```\r\nWrite-Host \"Prices are calculated based on US dollars and converted using Thomson Reuters benchmark rates refreshed on the first day of each calendar month\" -ForegroundColor Yellow\r\n\r\n$baseUrl = \"https://prices.azure.com/api/retail/prices?api-version=2021-10-01-preview\"\r\n\r\n$CurrencyCode = \"{CurrencyCode}\"\r\n$ARMRegionName = \"{WorkspaceLocation}\"\r\n\r\n$AzureMonitorURL = $baseUrl + \r\n\"&currencyCode='$CurrencyCode'&\" +\r\n\"`$filter=\" +\r\n\"armRegionName eq '$ARMRegionName'\" +\r\n\" and (\" +\r\n\"serviceName eq 'Azure Monitor'\" +\r\n\" or serviceName eq 'Log Analytics'\" +\r\n\")\" +\r\n\" and (\" +\r\n\"meterName eq 'Pay-as-you-go Data Ingestion'\" +\r\n\" or meterName eq '100 GB Commitment Tier Capacity Reservation'\" +\r\n\" or meterName eq '200 GB Commitment Tier Capacity Reservation'\" +\r\n\" or meterName eq '300 GB Commitment Tier Capacity Reservation'\" +\r\n\" or meterName eq '400 GB Commitment Tier Capacity Reservation'\" +\r\n\" or meterName eq '500 GB Commitment Tier Capacity Reservation'\" +\r\n\" or meterName eq '1000 GB Commitment Tier Capacity Reservation'\" +\r\n\" or meterName eq '2000 GB Commitment Tier Capacity Reservation'\" +\r\n\" or meterName eq '5000 GB Commitment Tier Capacity Reservation'\" +\r\n\")\" \r\n   \r\n$SentinelURL = $baseUrl + \r\n\"&currencyCode='$CurrencyCode'&\" +\r\n\"`$filter=\" +\r\n\"armRegionName eq '$ARMRegionName'\" +\r\n\" and serviceName eq 'Sentinel'\" +\r\n\" and (\" +\r\n\"meterName eq 'Pay-as-you-go Analysis'\" +\r\n\" or meterName eq '100 GB Commitment Tier Capacity Reservation'\" +\r\n\" or meterName eq '200 GB Commitment Tier Capacity Reservation'\" +\r\n\" or meterName eq '300 GB Commitment Tier Capacity Reservation'\" +\r\n\" or meterName eq '400 GB Commitment Tier Capacity Reservation'\" +\r\n\" or meterName eq '500 GB Commitment Tier Capacity Reservation'\" +\r\n\" or meterName eq '1000 GB Commitment Tier Capacity Reservation'\" +\r\n\" or meterName eq '2000 GB Commitment Tier Capacity Reservation'\" +\r\n\" or meterName eq '5000 GB Commitment Tier Capacity Reservation'\" +\r\n\")\" \r\n\r\n$request = invoke-RestRequest -Uri $SentinelURL -Method Get\r\n\r\n$urls = $SentinelURL, $AzureMonitorURL\r\n\r\n$Prices = @()\r\n$i = 0\r\nforeach ($url in $urls) {\r\n\r\n    $RestRequestParameters = @{\r\n        uri    = $url\r\n        Method = \"Get\"\r\n    }\r\n\r\n    do {\r\n\r\n        Write-Host \"Request $i\"\r\n        Write-Host $RestRequestParameters.uri\r\n        $Request = Invoke-RestRequest @RestRequestParameters\r\n\r\n        if ($Request.StatusCode -eq 200) {\r\n            $RequestContent = $Request.Content | ConvertFrom-Json -Depth 5\r\n            $Prices += $RequestContent.Items \r\n        }\r\n\r\n        $RestRequestParameters = @{\r\n            uri    = $RequestContent.NextPageLink\r\n            Method = \"Get\"\r\n        }\r\n        $i ++\r\n    } until (\r\n        !$RequestContent.NextPageLink\r\n    )\r\n}\r\n\r\n$Prices = $Prices | Where-Object {$_.retailPrice -ne 0}\r\n\r\n$PricesOutput = @()\r\n\r\nforeach ($Price in $Prices){\r\n    if ($Price.serviceName -eq \"Log Analytics\"){\r\n        $ServiceName = \"Azure Monitor\"\r\n    }\r\n    else {\r\n        $ServiceName = $Price.serviceName\r\n    }\r\n\r\n    $PriceOutput = @{\r\n        label = $Price.meterName.split(\" \")[0]\r\n        value = @{\r\n            Service = $ServiceName\r\n            retailPrice =  $Price.retailPrice\r\n        }\r\n    }\r\n    \r\n    if ($PriceOutput.label -like \"Pay-as-you-go\"){\r\n        $PriceOutput.Add(\"Selected\", $true)\r\n    }\r\n\r\n    $PricesOutput += $PriceOutput\r\n}\r\n\r\n$PricesOutputJSON = $PricesOutput | ConvertTo-Json -Depth 10 -Compress\r\n\r\nClear-Host\r\n$PricesOutputJSON\r\n# $PricesOutputJSON | clip\r\n```\r\n\r\n> **TIP!**: You can uncomment the final line by removing the hash **#** if run locally on your windows OS.\r\n\r\nThe output should look similar to below (This has been truncated for brevity). Paste you output into the **Prices Inputs** parameter\r\n\r\n ```\r\n [\r\n\t{\r\n\t\t\"value\": {\r\n\t\t\t\"retailPrice\": 1537.2471,\r\n\t\t\t\"Service\": \"Sentinel\"\r\n\t\t},\r\n\t\t\"label\": \"2000\"\r\n\t},\r\n\t{\r\n\t\t\"value\": {\r\n\t\t\t\"retailPrice\": 810.1708,\r\n\t\t\t\"Service\": \"Sentinel\"\r\n\t\t},\r\n\t\t\"label\": \"1000\"\r\n\t}\r\n ]\r\n```\r\n\r\n"
              },
              "name": "text - 1"
            },
            {
              "type": 9,
              "content": {
                "version": "KqlParameterItem/1.0",
                "parameters": [
                  {
                    "id": "e329aeb1-12b1-412b-a801-fcc14242b461",
                    "version": "KqlParameterItem/1.0",
                    "name": "PriceInputs",
                    "label": "Price Inputs",
                    "type": 1,
                    "isRequired": true,
                    "typeSettings": {
                      "multiLineText": true,
                      "editorLanguage": "json",
                      "multiLineHeight": 40
                    },
                    "timeContext": {
                      "durationMs": 86400000
                    },
                    "value": "[{\"label\":\"400\",\"value\":{\"Service\":\"Sentinel\",\"retailPrice\":340.6872}},{\"label\":\"5000\",\"value\":{\"Service\":\"Sentinel\",\"retailPrice\":3577.2155}},{\"label\":\"500\",\"value\":{\"Service\":\"Sentinel\",\"retailPrice\":408.8246}},{\"label\":\"2000\",\"value\":{\"Service\":\"Sentinel\",\"retailPrice\":1512.6511}},{\"label\":\"100\",\"value\":{\"Service\":\"Sentinel\",\"retailPrice\":102.2062}},{\"label\":\"1000\",\"value\":{\"Service\":\"Sentinel\",\"retailPrice\":797.208}},{\"label\":\"Pay-as-you-go\",\"Selected\":true,\"value\":{\"Service\":\"Sentinel\",\"retailPrice\":2.0441}},{\"label\":\"200\",\"value\":{\"Service\":\"Sentinel\",\"retailPrice\":183.9711}},{\"label\":\"300\",\"value\":{\"Service\":\"Sentinel\",\"retailPrice\":265.736}},{\"label\":\"200\",\"value\":{\"Service\":\"Azure Monitor\",\"retailPrice\":342.482}},{\"label\":\"1000\",\"value\":{\"Service\":\"Azure Monitor\",\"retailPrice\":1582.1181}},{\"label\":\"400\",\"value\":{\"Service\":\"Azure Monitor\",\"retailPrice\":655.183}},{\"label\":\"2000\",\"value\":{\"Service\":\"Azure Monitor\",\"retailPrice\":3089.7835}},{\"label\":\"300\",\"value\":{\"Service\":\"Azure Monitor\",\"retailPrice\":502.5552}},{\"label\":\"Pay-as-you-go\",\"Selected\":true,\"value\":{\"Service\":\"Azure Monitor\",\"retailPrice\":2.2934}},{\"label\":\"5000\",\"value\":{\"Service\":\"Azure Monitor\",\"retailPrice\":7491.7944}},{\"label\":\"100\",\"value\":{\"Service\":\"Azure Monitor\",\"retailPrice\":182.4089}},{\"label\":\"500\",\"value\":{\"Service\":\"Azure Monitor\",\"retailPrice\":805.0189}}]\n"
                  }
                ],
                "style": "formVertical",
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces"
              },
              "name": "parameters - 2"
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "{\"version\":\"1.0.0\",\"content\":\"{PriceInputs}\",\"transformers\":[{\"type\":\"jsonpath\",\"settings\":{\"tablePath\":\"\",\"columns\":[{\"path\":\"$.value.retailPrice\",\"columnid\":\"RetailPrice\"},{\"path\":\"$.value.Service\",\"columnid\":\"Service\"},{\"path\":\"$.label\",\"columnid\":\"Tier\"},{\"path\":\"$.Selected\",\"columnid\":\"Selected\"}]}}]}",
                "size": 0,
                "queryType": 8,
                "visualization": "table",
                "gridSettings": {
                  "formatters": [
                    {
                      "columnMatch": "RetailPrice",
                      "formatter": 1,
                      "numberFormat": {
                        "unit": 0,
                        "options": {
                          "style": "decimal",
                          "minimumFractionDigits": 3
                        }
                      }
                    }
                  ]
                },
                "sortBy": []
              },
              "showPin": false,
              "name": "query - 5"
            },
            {
              "type": 1,
              "content": {
                "json": "# Finished\r\n\r\nIf the above table has been populated similar to below, then scroll back to the top of the page and select the tab **Charts**. If not verify the PowerShell script has run properly. \r\n\r\n> **Note**: The order of the above table does not matter.\r\n\r\n| RetailPrice|Service|Tier|Selected|\r\n|-|-|-|-|\r\n|2.460|Sentinel|Pay-as-you-go|true|\r\n|123.000|Sentinel|100||",
                "style": "info"
              },
              "name": "text - 4"
            },
            {
              "type": 11,
              "content": {
                "version": "LinkItem/1.0",
                "style": "list",
                "links": [
                  {
                    "id": "7ec0dffa-2a4a-44cd-8bf8-6765f601b7c2",
                    "cellValue": "parameters - 0",
                    "linkTarget": "step",
                    "linkLabel": "Click here to navigate back to the top",
                    "subTarget": "Charts",
                    "preText": "",
                    "style": "primary"
                  }
                ]
              },
              "name": "links - 6"
            }
          ],
          "exportParameters": true
        },
        "conditionalVisibility": {
          "parameterName": "TabSelection",
          "comparison": "isEqualTo",
          "value": "Setup"
        },
        "name": "group - Setup"
      },
      {
        "type": 12,
        "content": {
          "version": "NotebookGroup/1.0",
          "groupType": "editable",
          "items": [
            {
              "type": 1,
              "content": {
                "json": "# Commitment Tier Parameters\r\n\r\nThese charts require two parameters. Both have the same values, but reflect Cost Tiers for Sentinel and Log Analytics. The reason for this is because enabling Commitment Tiers for Sentinel and Log Analytics are seperate and are cost effective at different thresholds. These parameters allow you to simulate the cost for each service with a selection of combinations",
                "style": "info"
              },
              "conditionalVisibility": {
                "parameterName": "ShowHelp",
                "comparison": "isEqualTo",
                "value": "true"
              },
              "name": "text - help - Charts"
            },
            {
              "type": 9,
              "content": {
                "version": "KqlParameterItem/1.0",
                "parameters": [
                  {
                    "id": "255c5943-cfbe-4434-a7b2-9614b8d65b5f",
                    "version": "KqlParameterItem/1.0",
                    "name": "TimeRange",
                    "label": "Time Range",
                    "type": 4,
                    "description": "Time span of usage logs to be analyzed. Time Range will automatically be truncated to the start of the next  for the start time and end of the previous day for the end time within the queries. This is to ensure complete days for analysis.",
                    "isRequired": true,
                    "typeSettings": {
                      "selectableValues": [
                        {
                          "durationMs": 2419200000
                        },
                        {
                          "durationMs": 2592000000
                        },
                        {
                          "durationMs": 5184000000
                        },
                        {
                          "durationMs": 7776000000
                        }
                      ],
                      "allowCustom": true
                    },
                    "timeContext": {
                      "durationMs": 86400000
                    },
                    "value": {
                      "durationMs": 31536000000,
                      "endTime": "2023-01-24T16:06:00.000Z"
                    }
                  },
                  {
                    "id": "ba82e042-daaf-4d29-85a8-d87bfe3bbb33",
                    "version": "KqlParameterItem/1.0",
                    "name": "SentinelCT",
                    "label": "Sentinel Commitment Tier",
                    "type": 2,
                    "multiSelect": true,
                    "quote": "'",
                    "delimiter": ",",
                    "typeSettings": {
                      "additionalResourceOptions": [],
                      "showDefault": false
                    },
                    "jsonData": "[\r\n    \"Pay-as-you-go\",\"100\",\"200\",\"300\",\"400\",\"500\",\"1000\",\"2000\",\"5000\"\r\n]",
                    "timeContext": {
                      "durationMs": 86400000
                    },
                    "value": [
                      "Pay-as-you-go",
                      "100",
                      "200",
                      "300"
                    ]
                  },
                  {
                    "id": "43a00ce0-c7d6-48c0-b9e0-69e1b131427d",
                    "version": "KqlParameterItem/1.0",
                    "name": "LogAnalyticsCT",
                    "type": 2,
                    "multiSelect": true,
                    "quote": "'",
                    "delimiter": ",",
                    "typeSettings": {
                      "additionalResourceOptions": [],
                      "showDefault": false
                    },
                    "jsonData": "[\r\n    \"Pay-as-you-go\",\"100\",\"200\",\"300\",\"400\",\"500\",\"1000\",\"2000\",\"5000\"\r\n]",
                    "timeContext": {
                      "durationMs": 86400000
                    },
                    "value": [
                      "100",
                      "Pay-as-you-go"
                    ]
                  },
                  {
                    "id": "3c24da28-916a-4fa9-a2fd-4acf0caeafbd",
                    "version": "KqlParameterItem/1.0",
                    "name": "SentinelPricing",
                    "type": 1,
                    "query": "let IndexLookup = datatable (Tier: string, Index: int) [\r\n    \"Pay-as-you-go\", 0,\r\n    \"100\", 1,\r\n    \"200\", 2,\r\n    \"300\", 3,\r\n    \"400\", 4,\r\n    \"500\", 5,\r\n    \"1000\", 6,\r\n    \"2000\", 7,\r\n    \"5000\", 8\r\n];\r\nlet PriceInputs = dynamic({PriceInputs});\r\nprint PriceInputs = PriceInputs\r\n| mvexpand PriceInputs\r\n| evaluate bag_unpack(PriceInputs)\r\n| evaluate bag_unpack(value)\r\n| project Service, Tier = label, retailPrice\r\n| where Service == \"Sentinel\"\r\n| where isnotempty(retailPrice) or retailPrice > 0\r\n| join kind = inner (IndexLookup) on Tier\r\n| project-away Tier1\r\n| order by Service asc, Index asc\r\n| serialize\r\n| extend TierVolumeGB = iif(Index == 0, 1, toint(Tier))\r\n| extend EffectivePricePerGB = retailPrice / TierVolumeGB\r\n| extend EffectiveCTThresholdGB = iff(Index == 0, toreal(0), retailPrice / prev(EffectivePricePerGB))\r\n| project Output = pack_all()\r\n| summarize Output = makelist(Output)\r\n\r\n",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "isHiddenWhenLocked": true,
                    "timeContext": {
                      "durationMs": 0
                    },
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  {
                    "id": "6b9f6f52-2e68-4297-b3a1-3008683d7279",
                    "version": "KqlParameterItem/1.0",
                    "name": "LogAnalyticsPricing",
                    "type": 1,
                    "query": "let IndexLookup = datatable (Tier: string, Index: int) [\r\n    \"Pay-as-you-go\", 0,\r\n    \"100\", 1,\r\n    \"200\", 2,\r\n    \"300\", 3,\r\n    \"400\", 4,\r\n    \"500\", 5,\r\n    \"1000\", 6,\r\n    \"2000\", 7,\r\n    \"5000\", 8\r\n];\r\nlet PriceInputs = dynamic({PriceInputs});\r\nprint PriceInputs = PriceInputs\r\n| mvexpand PriceInputs\r\n| evaluate bag_unpack(PriceInputs)\r\n| evaluate bag_unpack(value)\r\n| project Service, Tier = label, retailPrice\r\n| where Service == \"Azure Monitor\"\r\n| where isnotempty(retailPrice) or retailPrice > 0\r\n| join kind = inner (IndexLookup) on Tier\r\n| project-away Tier1\r\n| order by Service asc, Index asc\r\n| serialize\r\n| extend TierVolumeGB = iif(Index == 0, 1, toint(Tier))\r\n| extend EffectivePricePerGB = retailPrice / TierVolumeGB\r\n| extend EffectiveCTThresholdGB = iff(Index == 0, toreal(0), retailPrice / prev(EffectivePricePerGB))\r\n| project Output = pack_all()\r\n| summarize Output = makelist(Output)\r\n\r\n",
                    "crossComponentResources": [
                      "{Workspace}"
                    ],
                    "isHiddenWhenLocked": true,
                    "timeContext": {
                      "durationMs": 0
                    },
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  }
                ],
                "style": "pills",
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces"
              },
              "name": "parameters - 4"
            }
          ],
          "exportParameters": true
        },
        "conditionalVisibility": {
          "parameterName": "TabSelection",
          "comparison": "isNotEqualTo",
          "value": "Setup"
        },
        "name": "group - Pricing Parameters"
      },
      {
        "type": 12,
        "content": {
          "version": "NotebookGroup/1.0",
          "groupType": "editable",
          "items": [
            {
              "type": 1,
              "content": {
                "json": "# Charts Color Coding\r\n\r\nEach Tier shown in the charts should be color coded as per the below legend. (All except for the forecasting charts which only show one tier at a time)",
                "style": "info"
              },
              "conditionalVisibility": {
                "parameterName": "ShowHelp",
                "comparison": "isEqualTo",
                "value": "true"
              },
              "name": "text - help - Charts Color Coding"
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "print series = dynamic([\r\n        {\r\n          \"Tier\": \"Pay-as-you-go\",\r\n          \"Color\": \"Blue\"\r\n        },\r\n        {\r\n          \"Tier\": \"100\",\r\n          \"Color\": \"Orange\"\r\n        },\r\n        {\r\n          \"Tier\": \"200\",\r\n          \"Color\": \"Bright Red\"\r\n        },\r\n        {\r\n          \"Tier\": \"300\",\r\n          \"Color\": \"Turquoise\"\r\n        },\r\n        {\r\n          \"Tier\": \"400\",\r\n          \"Color\": \"Brown\"\r\n        },\r\n        {\r\n          \"Tier\": \"500\",\r\n          \"Color\": \"Purple\"\r\n        },\r\n        {\r\n          \"Tier\": \"1000\",\r\n          \"Color\": \"Green\"\r\n        },\r\n        {\r\n          \"Tier\": \"2000\",\r\n          \"Color\": \"Gray\"\r\n        },\r\n        {\r\n          \"Tier\": \"5000\",\r\n          \"Color\": \"Light Blue\"\r\n        }\r\n        ]\r\n      )\r\n    | mvexpand series\r\n    | evaluate bag_unpack(series)\r\n    | project Tier = tostring(Tier) , Color = tostring(Color)",
                "size": 4,
                "timeContext": {
                  "durationMs": 86400000
                },
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "crossComponentResources": [
                  "{Workspace}"
                ],
                "visualization": "tiles",
                "gridSettings": {
                  "formatters": [
                    {
                      "columnMatch": "Color",
                      "formatter": 3,
                      "formatOptions": {
                        "palette": "blue"
                      }
                    }
                  ]
                },
                "tileSettings": {
                  "titleContent": {
                    "columnMatch": "Tier",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  "leftContent": {
                    "columnMatch": "Color",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Blue",
                          "representation": "blue",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Orange",
                          "representation": "orange",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Bright Red",
                          "representation": "redBright",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Turquoise",
                          "representation": "turquoise",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Brown",
                          "representation": "brown",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Purple",
                          "representation": "purple",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Green",
                          "representation": "green",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Gray",
                          "representation": "gray",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Light Blue",
                          "representation": "lightBlue",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "pink",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  "showBorder": false,
                  "sortOrderField": 1
                },
                "graphSettings": {
                  "type": 0
                }
              },
              "conditionalVisibility": {
                "parameterName": "ShowHelp",
                "comparison": "isEqualTo",
                "value": "true"
              },
              "name": "query - Help - Series Tiles"
            },
            {
              "type": 1,
              "content": {
                "json": "# Sum of Daily Costs\r\n\r\nThese charts show the pricing for Sentinel (left) and Log Analytics (Right) based on the selected commitment tiers and current usage. \r\n\r\nFor example if you change the parameter **Sentinel Commitment Tier** to *Pay-as-you-go* and *500*, the left chart would display two series for each selected tier. Each series would reflect the prices that would have been paid based on the selected tiers.",
                "style": "info"
              },
              "conditionalVisibility": {
                "parameterName": "ShowHelp",
                "comparison": "isEqualTo",
                "value": "true"
              },
              "name": "text - help - Daily Costs"
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "let TimeRangeStart = startofday(todatetime({TimeRange:start}),1);\r\nlet TimeRangeEnd = endofday(todatetime({TimeRange:end}),-1);\r\nlet SelectedTiers = dynamic([{SentinelCT}]);\r\nlet PriceInputs = print Prices = dynamic({SentinelPricing})\r\n    | mv-expand Prices\r\n    | evaluate bag_unpack(Prices)\r\n    | extend JoinColumn = 1;\r\nlet UsageMetrics = \r\n    Usage \r\n    | where IsBillable == true \r\n    | make-series Quantity = sum(Quantity) default = 0 on StartTime from TimeRangeStart to TimeRangeEnd step 1d\r\n    | mv-expand Quantity to typeof(long), StartTime to typeof(datetime)\r\n    | project Quantity_GB  = (Quantity / 1e3), StartTime\r\n    | extend JoinColumn = 1;\r\nUsageMetrics\r\n| join kind = inner (\r\n        PriceInputs\r\n        | where Tier in (SelectedTiers)\r\n)\r\non JoinColumn\r\n| project-away JoinColumn, JoinColumn1\r\n| extend CostAtTier = iff(Quantity_GB > TierVolumeGB, Quantity_GB * EffectivePricePerGB, retailPrice)\r\n| make-series CostAtTier = sum(CostAtTier), Quantity_GB = sum(Quantity_GB) on StartTime from TimeRangeStart to TimeRangeEnd step 1d by Tier, Index\r\n| extend CostMovingAverage = series_fir(CostAtTier, repeat(1, 7), true, true)\r\n| extend Quantity_GBMovingAverage = series_fir(Quantity_GB, repeat(1, 7), true, true)\r\n| render timechart ",
                "size": 0,
                "title": "Sum of Daily Sentinel Cost ({CurrencyCode})",
                "timeContextFromParameter": "TimeRange",
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "crossComponentResources": [
                  "{Workspace}"
                ],
                "visualization": "timechart",
                "chartSettings": {
                  "yAxis": [
                    "CostAtTier"
                  ],
                  "seriesLabelSettings": [
                    {
                      "seriesName": "Pay-as-you-go",
                      "color": "blue"
                    },
                    {
                      "seriesName": "100",
                      "color": "orange"
                    },
                    {
                      "seriesName": "200",
                      "color": "redBright"
                    },
                    {
                      "seriesName": "300",
                      "color": "turquoise"
                    },
                    {
                      "seriesName": "400",
                      "color": "brown"
                    },
                    {
                      "seriesName": "500",
                      "color": "purple"
                    },
                    {
                      "seriesName": "1000",
                      "color": "green"
                    },
                    {
                      "seriesName": "2000",
                      "color": "gray"
                    },
                    {
                      "seriesName": "5000",
                      "color": "lightBlue"
                    }
                  ],
                  "ySettings": {
                    "numberFormatSettings": {
                      "unit": 0,
                      "options": {
                        "style": "decimal",
                        "useGrouping": true,
                        "minimumFractionDigits": 2,
                        "maximumFractionDigits": 2
                      }
                    }
                  }
                }
              },
              "customWidth": "50",
              "name": "Sentinel Ingestion Metrics",
              "styleSettings": {
                "maxWidth": "50"
              }
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "let TimeRangeStart = startofday(todatetime({TimeRange:start}),1);\r\nlet TimeRangeEnd = endofday(todatetime({TimeRange:end}),-1);\r\nlet SelectedTiers = dynamic([{LogAnalyticsCT}]);\r\nlet PriceInputs = print Prices = dynamic({LogAnalyticsPricing})\r\n    | mv-expand Prices\r\n    | evaluate bag_unpack(Prices)\r\n    | extend JoinColumn = 1;\r\nlet UsageMetrics = \r\n    Usage \r\n    | where IsBillable == true \r\n    | make-series Quantity = sum(Quantity) default = 0 on StartTime from TimeRangeStart to TimeRangeEnd step 1d\r\n    | mv-expand Quantity to typeof(long), StartTime to typeof(datetime)\r\n    | project Quantity_GB  = (Quantity / 1e3), StartTime\r\n    | extend JoinColumn = 1;\r\nUsageMetrics\r\n| join kind = inner (\r\n        PriceInputs\r\n        | where Tier in (SelectedTiers)\r\n)\r\non JoinColumn\r\n| project-away JoinColumn, JoinColumn1\r\n| extend CostAtTier = iff(Quantity_GB > TierVolumeGB, Quantity_GB * EffectivePricePerGB, retailPrice)\r\n| make-series CostAtTier = sum(CostAtTier), Quantity_GB = sum(Quantity_GB) on StartTime from TimeRangeStart to TimeRangeEnd step 1d by Tier, Index\r\n| extend CostMovingAverage = series_fir(CostAtTier, repeat(1, 7), true, true)\r\n| extend Quantity_GBMovingAverage = series_fir(Quantity_GB, repeat(1, 7), true, true)\r\n| render timechart ",
                "size": 0,
                "title": "Sum of Log Analytics Cost ({CurrencyCode})",
                "timeContextFromParameter": "TimeRange",
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "crossComponentResources": [
                  "{Workspace}"
                ],
                "visualization": "timechart",
                "chartSettings": {
                  "yAxis": [
                    "CostAtTier"
                  ],
                  "seriesLabelSettings": [
                    {
                      "seriesName": "Pay-as-you-go",
                      "color": "blue"
                    },
                    {
                      "seriesName": "100",
                      "color": "orange"
                    },
                    {
                      "seriesName": "200",
                      "color": "redBright"
                    },
                    {
                      "seriesName": "300",
                      "color": "turquoise"
                    },
                    {
                      "seriesName": "400",
                      "color": "brown"
                    },
                    {
                      "seriesName": "500",
                      "color": "purple"
                    },
                    {
                      "seriesName": "1000",
                      "color": "green"
                    },
                    {
                      "seriesName": "2000",
                      "color": "gray"
                    },
                    {
                      "seriesName": "5000",
                      "color": "lightBlue"
                    }
                  ],
                  "ySettings": {
                    "numberFormatSettings": {
                      "unit": 0,
                      "options": {
                        "style": "decimal",
                        "useGrouping": true,
                        "minimumFractionDigits": 2,
                        "maximumFractionDigits": 2
                      }
                    }
                  }
                }
              },
              "customWidth": "50",
              "name": "Log Analytics Ingestion Metrics",
              "styleSettings": {
                "maxWidth": "50"
              }
            },
            {
              "type": 1,
              "content": {
                "json": "# Moving Average Costs\r\n\r\nThese charts show the moving average costs for Sentinel (left) and Log Analytics (Right) based on the selected commitment tiers and current usage. \r\n\r\nIn statistics, a moving average is a calculation to analyze data points by creating a series of averages of different subsets of the full data set. This is used in this example to smooth out short term fluctuations in the data and to highligt longer trends\r\n\r\nFor example if you change the parameter **Sentinel Commitment Tier** to *Pay-as-you-go* and *500*, the left chart would display two series for each selected tier. Each series would reflect the moving averages cost based on the selected tiers.",
                "style": "info"
              },
              "conditionalVisibility": {
                "parameterName": "ShowHelp",
                "comparison": "isEqualTo",
                "value": "true"
              },
              "name": "text - help - Moving Average Cost"
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"1dba5cef-3c62-4614-a76a-f8c7b8e8812c\",\"mergeType\":\"table\",\"leftTable\":\"Sentinel Ingestion Metrics\"}],\"projectRename\":[{\"originalName\":\"[Sentinel Ingestion Metrics].Tier\",\"mergedName\":\"Tier\",\"fromId\":\"1dba5cef-3c62-4614-a76a-f8c7b8e8812c\"},{\"originalName\":\"[Sentinel Ingestion Metrics].StartTime\",\"mergedName\":\"StartTime\",\"fromId\":\"1dba5cef-3c62-4614-a76a-f8c7b8e8812c\"},{\"originalName\":\"[Sentinel Ingestion Metrics].CostMovingAverage\",\"mergedName\":\"CostMovingAverage\",\"fromId\":\"1dba5cef-3c62-4614-a76a-f8c7b8e8812c\"},{\"originalName\":\"[query - 1].CostAtTier\"},{\"originalName\":\"[Sum of Daily Ingestion Cost ].CostAtTier\"},{\"originalName\":\"[Sum of Daily Ingestion Cost].CostAtTier\"},{\"originalName\":\"[Sum of Daily Ingestion Cost].Quantity_GBMovingAverage\"},{\"originalName\":\"[Sum of Daily Ingestion Cost].Quantity_GB\"},{\"originalName\":\"[Sum of Daily Ingestion Cost].Index\"},{\"originalName\":\"[Sum of Daily Ingestion Cost].CostMovingAverage\"},{\"originalName\":\"[Sum of Daily Ingestion Cost].Tier\"},{\"originalName\":\"[Sentinel Ingestion Metrics].Index\"},{\"originalName\":\"[Sentinel Ingestion Metrics].CostAtTier\"},{\"originalName\":\"[Sentinel Ingestion Metrics].Quantity_GB\"},{\"originalName\":\"[Sentinel Ingestion Metrics].Quantity_GBMovingAverage\"}]}",
                "size": 0,
                "aggregation": 3,
                "title": "Sentinel 7 Day Moving Average Cost ({CurrencyCode})",
                "queryType": 7,
                "visualization": "timechart",
                "chartSettings": {
                  "seriesLabelSettings": [
                    {
                      "seriesName": "Pay-as-you-go",
                      "color": "blue"
                    },
                    {
                      "seriesName": "100",
                      "color": "orange"
                    },
                    {
                      "seriesName": "200",
                      "color": "redBright"
                    },
                    {
                      "seriesName": "300",
                      "color": "turquoise"
                    },
                    {
                      "seriesName": "400",
                      "color": "brown"
                    },
                    {
                      "seriesName": "500",
                      "color": "purple"
                    },
                    {
                      "seriesName": "1000",
                      "color": "green"
                    },
                    {
                      "seriesName": "2000",
                      "color": "gray"
                    },
                    {
                      "seriesName": "5000",
                      "color": "lightBlue"
                    }
                  ],
                  "ySettings": {
                    "numberFormatSettings": {
                      "unit": 0,
                      "options": {
                        "style": "decimal",
                        "useGrouping": true,
                        "minimumFractionDigits": 2,
                        "maximumFractionDigits": 2
                      }
                    }
                  }
                }
              },
              "customWidth": "50",
              "name": "Sentinel Moving Average",
              "styleSettings": {
                "maxWidth": "50"
              }
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "{\"version\":\"Merge/1.0\",\"merges\":[{\"id\":\"1dba5cef-3c62-4614-a76a-f8c7b8e8812c\",\"mergeType\":\"table\",\"leftTable\":\"Log Analytics Ingestion Metrics\"}],\"projectRename\":[{\"originalName\":\"[Log Analytics Ingestion Metrics].Tier\",\"mergedName\":\"Tier\",\"fromId\":\"1dba5cef-3c62-4614-a76a-f8c7b8e8812c\"},{\"originalName\":\"[Log Analytics Ingestion Metrics].StartTime\",\"mergedName\":\"StartTime\",\"fromId\":\"1dba5cef-3c62-4614-a76a-f8c7b8e8812c\"},{\"originalName\":\"[Log Analytics Ingestion Metrics].CostMovingAverage\",\"mergedName\":\"CostMovingAverage\",\"fromId\":\"1dba5cef-3c62-4614-a76a-f8c7b8e8812c\"},{\"originalName\":\"[query - 1].CostAtTier\"},{\"originalName\":\"[Sum of Daily Ingestion Cost ].CostAtTier\"},{\"originalName\":\"[Sum of Daily Ingestion Cost].CostAtTier\"},{\"originalName\":\"[Sum of Daily Ingestion Cost].Quantity_GBMovingAverage\"},{\"originalName\":\"[Sum of Daily Ingestion Cost].Quantity_GB\"},{\"originalName\":\"[Sum of Daily Ingestion Cost].Index\"},{\"originalName\":\"[Sum of Daily Ingestion Cost].CostMovingAverage\"},{\"originalName\":\"[Sum of Daily Ingestion Cost].Tier\"},{\"originalName\":\"[Sentinel Ingestion Metrics].Index\"},{\"originalName\":\"[Sentinel Ingestion Metrics].CostAtTier\"},{\"originalName\":\"[Sentinel Ingestion Metrics].Quantity_GB\"},{\"originalName\":\"[Sentinel Ingestion Metrics].Quantity_GBMovingAverage\"},{\"originalName\":\"[Log Analytics Ingestion Metrics].Index\"},{\"originalName\":\"[Log Analytics Ingestion Metrics].CostAtTier\"},{\"originalName\":\"[Log Analytics Ingestion Metrics].Quantity_GB\"},{\"originalName\":\"[Log Analytics Ingestion Metrics].Quantity_GBMovingAverage\"}]}",
                "size": 0,
                "aggregation": 3,
                "title": "Log Analytics 7 Day Moving Average Cost ({CurrencyCode})",
                "queryType": 7,
                "visualization": "timechart",
                "chartSettings": {
                  "seriesLabelSettings": [
                    {
                      "seriesName": "Pay-as-you-go",
                      "color": "blue"
                    },
                    {
                      "seriesName": "100",
                      "color": "orange"
                    },
                    {
                      "seriesName": "200",
                      "color": "redBright"
                    },
                    {
                      "seriesName": "300",
                      "color": "turquoise"
                    },
                    {
                      "seriesName": "400",
                      "color": "brown"
                    },
                    {
                      "seriesName": "500",
                      "color": "purple"
                    },
                    {
                      "seriesName": "1000",
                      "color": "green"
                    },
                    {
                      "seriesName": "2000",
                      "color": "gray"
                    },
                    {
                      "seriesName": "5000",
                      "color": "lightBlue"
                    }
                  ],
                  "ySettings": {
                    "numberFormatSettings": {
                      "unit": 0,
                      "options": {
                        "style": "decimal",
                        "useGrouping": true,
                        "minimumFractionDigits": 2,
                        "maximumFractionDigits": 2
                      }
                    }
                  }
                }
              },
              "customWidth": "50",
              "name": "Log Analytics Moving Average",
              "styleSettings": {
                "maxWidth": "50"
              }
            },
            {
              "type": 1,
              "content": {
                "json": "# GB Ingested and Thresholds\r\n\r\nThese charts show the actual and average ingestion of billable data for Sentinel (left) and Log Analytics (right). It also visualises the thresholds which the selected commitment tiers become cost effective. \r\n\r\n\r\nFor example if you change the parameter **Sentinel Commitment Tier** to *Pay-as-you-go* and *500*, the left chart would display two series for each selected tier. It would also display two series called *\"Actual_Usage_GB\"* and *\"Average_Usage_GB\"*",
                "style": "info"
              },
              "conditionalVisibility": {
                "parameterName": "ShowHelp",
                "comparison": "isEqualTo",
                "value": "true"
              },
              "name": "text - help - GB Ingested and Thresholds"
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "let TimeRangeStart = startofday(todatetime({TimeRange:start}),1);\r\nlet TimeRangeEnd = endofday(todatetime({TimeRange:end}),-1);\r\nlet SelectedTiers = dynamic([{SentinelCT}]);\r\nlet PriceInputs = print Prices = dynamic({SentinelPricing})\r\n    | mv-expand Prices\r\n    | evaluate bag_unpack(Prices)\r\n    | project Tier = tostring(Tier), EffectiveCTThresholdGB = toreal(EffectiveCTThresholdGB)\r\n    | where Tier in (SelectedTiers)\r\n    | extend StartTime = range(TimeRangeStart, TimeRangeEnd, 1d)\r\n    | extend Quantity_GB = repeat(EffectiveCTThresholdGB, array_length(StartTime))\r\n    | project SeriesName = tostring(Tier), StartTime, Quantity_GB\r\n    ;\r\nlet UsageMetrics = \r\n    Usage \r\n    | where IsBillable == true \r\n    | make-series Quantity = sum(Quantity) default = 0 on StartTime from TimeRangeStart to TimeRangeEnd step 1d\r\n        | mv-expand Quantity to typeof(long), StartTime to typeof(datetime)\r\n        | project Quantity_GB  = (Quantity / 1e3), StartTime\r\n        | make-series Quantity_GB = sum(Quantity_GB) default = 0 on StartTime from TimeRangeStart to TimeRangeEnd step 1d\r\n    | extend SeriesName = \"Actual_Usage_GB\";\r\nlet AverageUsage = \r\n    UsageMetrics\r\n    | extend Stats = series_stats_dynamic(Quantity_GB)\r\n    | project SeriesName = \"Average_Usage_GB\" , StartTime, Quantity_GB = repeat(toreal(Stats.avg), array_length(Quantity_GB))\r\n;\r\nunion PriceInputs, UsageMetrics, AverageUsage\r\n| render timechart ",
                "size": 0,
                "title": "Sentinel GB Ingested and CT Thresholds",
                "timeContextFromParameter": "TimeRange",
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "crossComponentResources": [
                  "{Workspace}"
                ],
                "visualization": "timechart",
                "chartSettings": {
                  "seriesLabelSettings": [
                    {
                      "seriesName": "Pay-as-you-go",
                      "color": "blue"
                    },
                    {
                      "seriesName": "100",
                      "color": "orange"
                    },
                    {
                      "seriesName": "200",
                      "color": "redBright"
                    },
                    {
                      "seriesName": "300",
                      "color": "turquoise"
                    },
                    {
                      "seriesName": "400",
                      "color": "brown"
                    },
                    {
                      "seriesName": "500",
                      "color": "purple"
                    },
                    {
                      "seriesName": "1000",
                      "color": "green"
                    },
                    {
                      "seriesName": "2000",
                      "color": "gray"
                    },
                    {
                      "seriesName": "5000",
                      "color": "lightBlue"
                    }
                  ]
                }
              },
              "customWidth": "50",
              "name": "Sentinel GB Ingested and CT Thresholds",
              "styleSettings": {
                "maxWidth": "50"
              }
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "let TimeRangeStart = startofday(todatetime({TimeRange:start}),1);\r\nlet TimeRangeEnd = endofday(todatetime({TimeRange:end}),-1);\r\nlet SelectedTiers = dynamic([{LogAnalyticsCT}]);\r\nlet PriceInputs = print Prices = dynamic({LogAnalyticsPricing})\r\n    | mv-expand Prices\r\n    | evaluate bag_unpack(Prices)\r\n    | project Tier = tostring(Tier), EffectiveCTThresholdGB = toreal(EffectiveCTThresholdGB)\r\n    | where Tier in (SelectedTiers)\r\n    | extend StartTime = range(TimeRangeStart, TimeRangeEnd, 1d)\r\n    | extend Quantity_GB = repeat(EffectiveCTThresholdGB, array_length(StartTime))\r\n    | project SeriesName = tostring(Tier), StartTime, Quantity_GB\r\n    ;\r\nlet UsageMetrics = \r\n    Usage \r\n    | where IsBillable == true \r\n    | make-series Quantity = sum(Quantity) default = 0 on StartTime from TimeRangeStart to TimeRangeEnd step 1d\r\n        | mv-expand Quantity to typeof(long), StartTime to typeof(datetime)\r\n        | project Quantity_GB  = (Quantity / 1e3), StartTime\r\n        | make-series Quantity_GB = sum(Quantity_GB) default = 0 on StartTime from TimeRangeStart to TimeRangeEnd step 1d\r\n    | extend SeriesName = \"Actual_Usage_GB\";\r\nlet AverageUsage = \r\n    UsageMetrics\r\n    | extend Stats = series_stats_dynamic(Quantity_GB)\r\n    | project SeriesName = \"Average_Usage_GB\" , StartTime, Quantity_GB = repeat(toreal(Stats.avg), array_length(Quantity_GB))\r\n;\r\nunion PriceInputs, UsageMetrics, AverageUsage\r\n| render timechart ",
                "size": 0,
                "title": "Log Analytics GB Ingested and CT Thresholds",
                "timeContextFromParameter": "TimeRange",
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "crossComponentResources": [
                  "{Workspace}"
                ],
                "visualization": "timechart",
                "chartSettings": {
                  "seriesLabelSettings": [
                    {
                      "seriesName": "Pay-as-you-go",
                      "color": "blue"
                    },
                    {
                      "seriesName": "100",
                      "color": "orange"
                    },
                    {
                      "seriesName": "200",
                      "color": "redBright"
                    },
                    {
                      "seriesName": "300",
                      "color": "turquoise"
                    },
                    {
                      "seriesName": "400",
                      "color": "brown"
                    },
                    {
                      "seriesName": "500",
                      "color": "purple"
                    },
                    {
                      "seriesName": "1000",
                      "color": "green"
                    },
                    {
                      "seriesName": "2000",
                      "color": "gray"
                    },
                    {
                      "seriesName": "5000",
                      "color": "lightBlue"
                    }
                  ]
                }
              },
              "customWidth": "50",
              "name": "Log Analytics GB Ingested and CT Thresholds",
              "styleSettings": {
                "maxWidth": "50"
              }
            }
          ]
        },
        "conditionalVisibility": {
          "parameterName": "TabSelection",
          "comparison": "isEqualTo",
          "value": "Charts"
        },
        "name": "group - Charts"
      },
      {
        "type": 12,
        "content": {
          "version": "NotebookGroup/1.0",
          "groupType": "editable",
          "items": [
            {
              "type": 1,
              "content": {
                "json": "# GB Pricing Forecasted\r\n\r\nThese charts show the current ingestion cost the forecasted ingestion costs based of billable data for Sentinel (left) and Log Analytics (right). It also visualises the thresholds which the selected commitment tiers become cost effective. \r\n\r\nThese charts require you to select the Sentinel and Log Analytics tiers that will be displayed for forecasting.\r\n\r\nYou are also required to select a value from the parameter **Days Forecasted**.\r\n\r\nWhen making forecasting predictions, the more data you have historically, the more accurate the forecasting is. It is also worth noting the further in the future the data goes, the less accurate the prediction is.\r\n\r\nWhen observing these charts, you will see two series. \r\n- **CostAtTier**: This represents the current cost based on the pricing unputs and current usage. At the end of the selected time range, it will drop to 0.\r\n- **Forecasted**: This reflects the trend of data, with anomalous data samples removed. This is why it does not match the *CostAtTier* series exactly. At the end of the selected time range, it will continue further for the number of days selected in the parameter **Days Forecasted**, providing a calculated prection of the data based on historcal data.\r\n\r\n>Note: Forecasting cannot predict for unexpected changes that have not happened regularlly in the historical data, such as onboarding of new data sources. Also if seasonality cannot be detected (This means regular patterns, such as peaks and troughs in the data relating to user working hours), then it will display a line of best fit.",
                "style": "info"
              },
              "conditionalVisibility": {
                "parameterName": "ShowHelp",
                "comparison": "isEqualTo",
                "value": "true"
              },
              "name": "text - help - Pricing Forecasted"
            },
            {
              "type": 1,
              "content": {
                "json": "---\r\n# Forecasting\r\n"
              },
              "name": "text - seperator"
            },
            {
              "type": 9,
              "content": {
                "version": "KqlParameterItem/1.0",
                "parameters": [
                  {
                    "id": "b8bed91f-6531-4010-ba00-1856d2c62617",
                    "version": "KqlParameterItem/1.0",
                    "name": "DaysInFuture",
                    "label": "Days Forecasted",
                    "type": 10,
                    "isRequired": true,
                    "query": "{\"version\":\"1.0.0\",\"content\":\"[\\r\\n    {\\r\\n        \\\"value\\\":  1,\\r\\n        \\\"label\\\":  \\\"1 days\\\"\\r\\n    },\\r\\n    {\\r\\n        \\\"value\\\":  2,\\r\\n        \\\"label\\\":  \\\"2 days\\\"\\r\\n    },\\r\\n    {\\r\\n        \\\"value\\\":  3,\\r\\n        \\\"label\\\":  \\\"3 days\\\"\\r\\n    },\\r\\n    {\\r\\n        \\\"value\\\":  4,\\r\\n        \\\"label\\\":  \\\"4 days\\\"\\r\\n    },\\r\\n    {\\r\\n        \\\"value\\\":  5,\\r\\n        \\\"label\\\":  \\\"5 days\\\"\\r\\n    },\\r\\n    {\\r\\n        \\\"value\\\":  6,\\r\\n        \\\"label\\\":  \\\"6 days\\\"\\r\\n    },\\r\\n    {\\r\\n        \\\"label\\\":  \\\"1 week\\\",\\r\\n        \\\"selected\\\":  true,\\r\\n        \\\"value\\\":  7\\r\\n    },\\r\\n    {\\r\\n        \\\"value\\\":  14,\\r\\n        \\\"label\\\":  \\\"2 Weeks\\\"\\r\\n    },\\r\\n    {\\r\\n        \\\"value\\\":  21,\\r\\n        \\\"label\\\":  \\\"3 Weeks\\\"\\r\\n    },\\r\\n    {\\r\\n        \\\"value\\\":  28,\\r\\n        \\\"label\\\":  \\\"4 Weeks\\\"\\r\\n    },\\r\\n\\t    {\\r\\n        \\\"value\\\":  56,\\r\\n        \\\"label\\\":  \\\"8 Weeks\\\"\\r\\n    },\\r\\n\\t    {\\r\\n        \\\"value\\\":  84,\\r\\n        \\\"label\\\":  \\\"12 Weeks\\\"\\r\\n    }\\r\\n]\\r\\n\",\"transformers\":null}",
                    "typeSettings": {
                      "additionalResourceOptions": [],
                      "showDefault": false
                    },
                    "queryType": 8,
                    "value": "84"
                  }
                ],
                "style": "above",
                "queryType": 8
              },
              "name": "parameters - 15"
            },
            {
              "type": 9,
              "content": {
                "version": "KqlParameterItem/1.0",
                "parameters": [
                  {
                    "id": "2e6952da-1530-4fdd-8ba2-a5b3328f5260",
                    "version": "KqlParameterItem/1.0",
                    "name": "SentinelSelectedForecastTier",
                    "label": "Sentinel Tier",
                    "type": 10,
                    "isRequired": true,
                    "typeSettings": {
                      "additionalResourceOptions": [],
                      "showDefault": false
                    },
                    "jsonData": "[\r\n    {\r\n        \"value\":  \"Pay-as-you-go\",\r\n        \"label\":  \"Pay-as-you-go\",\r\n\t\t\"selected\" :true\r\n    },\r\n    {\r\n        \"value\":  \"100\",\r\n        \"label\":  \"100\"\r\n    },\r\n    {\r\n        \"value\":  \"200\",\r\n        \"label\":  \"200\"\r\n    },\r\n    {\r\n        \"value\":  \"300\",\r\n        \"label\":  \"300\"\r\n    },\r\n    {\r\n        \"value\":  \"400\",\r\n        \"label\":  \"400\"\r\n    },\r\n    {\r\n        \"value\":  \"500\",\r\n        \"label\":  \"500\"\r\n    },\r\n    {\r\n        \"value\":  \"1000\",\r\n        \"label\":  \"1000\"\r\n    },\r\n    {\r\n        \"value\":  \"2000\",\r\n        \"label\":  \"2000\"\r\n    },\r\n    {\r\n        \"value\":  \"5000\",\r\n        \"label\":  \"5000\"\r\n    }\r\n]\r\n",
                    "timeContext": {
                      "durationMs": 86400000
                    }
                  }
                ],
                "style": "above",
                "queryType": 8
              },
              "customWidth": "50",
              "name": "parameters - Forecasting - Sentinel"
            },
            {
              "type": 9,
              "content": {
                "version": "KqlParameterItem/1.0",
                "parameters": [
                  {
                    "id": "c5ee99ea-d45a-4c44-b072-cb56a4ab54ed",
                    "version": "KqlParameterItem/1.0",
                    "name": "LogAnalyticsSelectedForecastTier",
                    "label": "Log Analytics Tier",
                    "type": 10,
                    "isRequired": true,
                    "typeSettings": {
                      "additionalResourceOptions": [],
                      "showDefault": false
                    },
                    "jsonData": "[\r\n    {\r\n        \"value\":  \"Pay-as-you-go\",\r\n        \"label\":  \"Pay-as-you-go\",\r\n\t\t\"selected\" :true\r\n    },\r\n    {\r\n        \"value\":  \"100\",\r\n        \"label\":  \"100\"\r\n    },\r\n    {\r\n        \"value\":  \"200\",\r\n        \"label\":  \"200\"\r\n    },\r\n    {\r\n        \"value\":  \"300\",\r\n        \"label\":  \"300\"\r\n    },\r\n    {\r\n        \"value\":  \"400\",\r\n        \"label\":  \"400\"\r\n    },\r\n    {\r\n        \"value\":  \"500\",\r\n        \"label\":  \"500\"\r\n    },\r\n    {\r\n        \"value\":  \"1000\",\r\n        \"label\":  \"1000\"\r\n    },\r\n    {\r\n        \"value\":  \"2000\",\r\n        \"label\":  \"2000\"\r\n    },\r\n    {\r\n        \"value\":  \"5000\",\r\n        \"label\":  \"5000\"\r\n    }\r\n]\r\n",
                    "timeContext": {
                      "durationMs": 86400000
                    }
                  }
                ],
                "style": "above",
                "queryType": 8
              },
              "customWidth": "50",
              "name": "parameters - Forecasting - Log Analytics"
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "let TimeRangeStart = startofday(todatetime({TimeRange:start}),1);\r\nlet TimeRangeEnd = endofday(todatetime({TimeRange:end}),-1);\r\nlet DaysForecastedPastEnd = {DaysInFuture};\r\nlet SelectedTier = \"{SentinelSelectedForecastTier}\";\r\nlet PriceInputs = print Prices = dynamic({SentinelPricing})\r\n    | mv-expand Prices\r\n    | evaluate bag_unpack(Prices)\r\n    | extend JoinColumn = 1;\r\nlet UsageMetrics = \r\n    Usage \r\n    | where IsBillable == true \r\n    | make-series Quantity = sum(Quantity) default = 0 on StartTime from TimeRangeStart to TimeRangeEnd step 1d\r\n    | mv-expand Quantity to typeof(long), StartTime to typeof(datetime)\r\n    | project Quantity_GB  = (Quantity / 1e3), StartTime\r\n    | extend JoinColumn = 1;\r\nUsageMetrics\r\n| make-series Quantity_GB = sum(Quantity_GB) on StartTime from TimeRangeStart to datetime_add('Day', DaysForecastedPastEnd, TimeRangeEnd) step 1d \r\n| extend Quantity_GB_Forecasted=  series_decompose_forecast(Quantity_GB, DaysForecastedPastEnd)\r\n| mv-expand Quantity_GB to typeof(real), Quantity_GB_Forecasted to typeof(real), StartTime to typeof(datetime)\r\n| extend JoinColumn = 1\r\n| join kind = inner (\r\n    PriceInputs\r\n    | where Tier == SelectedTier\r\n    )\r\n    on JoinColumn\r\n| project-away JoinColumn, JoinColumn1\r\n| extend CostAtTier = iff(Quantity_GB > TierVolumeGB, Quantity_GB * EffectivePricePerGB, retailPrice)\r\n| extend CostAtTier_Forecasted = iff(Quantity_GB_Forecasted > TierVolumeGB, Quantity_GB_Forecasted * EffectivePricePerGB, retailPrice)\r\n| make-series CostAtTier = max(CostAtTier), Forecasted = max(CostAtTier_Forecasted) on StartTime from TimeRangeStart to datetime_add('Day', DaysForecastedPastEnd, TimeRangeEnd) step 1d \r\n| render timechart \r\n",
                "size": 0,
                "title": "Sentinel Forecasted Cost for Tier \"{SentinelSelectedForecastTier}\" in {CurrencyCode}",
                "timeContextFromParameter": "TimeRange",
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "crossComponentResources": [
                  "{Workspace}"
                ]
              },
              "customWidth": "50",
              "name": "Sentinel Forecasted Cost"
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "let TimeRangeStart = startofday(todatetime({TimeRange:start}),1);\r\nlet TimeRangeEnd = endofday(todatetime({TimeRange:end}),-1);\r\nlet DaysForecastedPastEnd = {DaysInFuture};\r\nlet SelectedTier = \"{LogAnalyticsSelectedForecastTier}\";\r\nlet PriceInputs = print Prices = dynamic({SentinelPricing})\r\n    | mv-expand Prices\r\n    | evaluate bag_unpack(Prices)\r\n    | extend JoinColumn = 1;\r\nlet UsageMetrics = \r\n    Usage \r\n    | where IsBillable == true \r\n    | make-series Quantity = sum(Quantity) default = 0 on StartTime from TimeRangeStart to TimeRangeEnd step 1d\r\n    | mv-expand Quantity to typeof(long), StartTime to typeof(datetime)\r\n    | project Quantity_GB  = (Quantity / 1e3), StartTime\r\n    | extend JoinColumn = 1;\r\nUsageMetrics\r\n| make-series Quantity_GB = sum(Quantity_GB) on StartTime from TimeRangeStart to datetime_add('Day', DaysForecastedPastEnd, TimeRangeEnd) step 1d \r\n| extend Quantity_GB_Forecasted=  series_decompose_forecast(Quantity_GB, DaysForecastedPastEnd)\r\n| mv-expand Quantity_GB to typeof(real), Quantity_GB_Forecasted to typeof(real), StartTime to typeof(datetime)\r\n| extend JoinColumn = 1\r\n| join kind = inner (\r\n    PriceInputs\r\n    | where Tier == SelectedTier\r\n    )\r\n    on JoinColumn\r\n| project-away JoinColumn, JoinColumn1\r\n| extend CostAtTier = iff(Quantity_GB > TierVolumeGB, Quantity_GB * EffectivePricePerGB, retailPrice)\r\n| extend CostAtTier_Forecasted = iff(Quantity_GB_Forecasted > TierVolumeGB, Quantity_GB_Forecasted * EffectivePricePerGB, retailPrice)\r\n| make-series CostAtTier = max(CostAtTier), Forecasted = max(CostAtTier_Forecasted) on StartTime from TimeRangeStart to datetime_add('Day', DaysForecastedPastEnd, TimeRangeEnd) step 1d \r\n| render timechart \r\n",
                "size": 0,
                "title": "Log Analytics Forecasted Cost for Tier \"{LogAnalyticsSelectedForecastTier}\" in {CurrencyCode}",
                "timeContextFromParameter": "TimeRange",
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "crossComponentResources": [
                  "{Workspace}"
                ]
              },
              "customWidth": "50",
              "name": "Log Analytics Forecasted Cost"
            }
          ]
        },
        "conditionalVisibility": {
          "parameterName": "TabSelection",
          "comparison": "isEqualTo",
          "value": "Forecasting"
        },
        "name": "group - Forecasting"
      }
    ],
    "fallbackResourceIds": [
      "azure monitor"
    ],
    "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
  }